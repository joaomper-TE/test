/*
Administrative API

## Overview Manage users, accounts, and account groups in the ThousandEyes platform using the Administrative API.  This API provides the following endpoints that define the operations to manage your organization:     * `/account-groups`: Account groups are used to divide an organization into different sections. These endpoints can be used to create, retrieve, update and delete account groups.   * `/users`: Create, retrieve, update and delete users within an organization.    * `/roles`: Create, retrieve and update roles for the current user.    * `/permissions`: Retrieve all assignable permissions. Used in the context of modifying roles.    * `/audit-user-events`: Retrieve all activity log events.

API version: 7.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package thousandeyes

import (
	"encoding/json"
)

// checks if the AccountGroupRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountGroupRequestBody{}

// AccountGroupRequestBody struct for AccountGroupRequestBody
type AccountGroupRequestBody struct {
	// The name of the account group
	AccountGroupName string `json:"accountGroupName"`
	// To grant access to enterprise agents, specify the agent list. Note that this is not an additive list - the full list must be specified if changing access to agents.
	Agents []string `json:"agents,omitempty"`
}

// NewAccountGroupRequestBody instantiates a new AccountGroupRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountGroupRequestBody(accountGroupName string) *AccountGroupRequestBody {
	this := AccountGroupRequestBody{}
	this.AccountGroupName = accountGroupName
	return &this
}

// NewAccountGroupRequestBodyWithDefaults instantiates a new AccountGroupRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountGroupRequestBodyWithDefaults() *AccountGroupRequestBody {
	this := AccountGroupRequestBody{}
	return &this
}

// GetAccountGroupName returns the AccountGroupName field value
func (o *AccountGroupRequestBody) GetAccountGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountGroupName
}

// GetAccountGroupNameOk returns a tuple with the AccountGroupName field value
// and a boolean to check if the value has been set.
func (o *AccountGroupRequestBody) GetAccountGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountGroupName, true
}

// SetAccountGroupName sets field value
func (o *AccountGroupRequestBody) SetAccountGroupName(v string) {
	o.AccountGroupName = v
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *AccountGroupRequestBody) GetAgents() []string {
	if o == nil || IsNil(o.Agents) {
		var ret []string
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupRequestBody) GetAgentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *AccountGroupRequestBody) HasAgents() bool {
	if o != nil && !IsNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []string and assigns it to the Agents field.
func (o *AccountGroupRequestBody) SetAgents(v []string) {
	o.Agents = v
}

func (o AccountGroupRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountGroupRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountGroupName"] = o.AccountGroupName
	if !IsNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	return toSerialize, nil
}

type NullableAccountGroupRequestBody struct {
	value *AccountGroupRequestBody
	isSet bool
}

func (v NullableAccountGroupRequestBody) Get() *AccountGroupRequestBody {
	return v.value
}

func (v *NullableAccountGroupRequestBody) Set(val *AccountGroupRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountGroupRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountGroupRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountGroupRequestBody(val *AccountGroupRequestBody) *NullableAccountGroupRequestBody {
	return &NullableAccountGroupRequestBody{value: val, isSet: true}
}

func (v NullableAccountGroupRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountGroupRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


