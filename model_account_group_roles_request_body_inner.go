/*
Administrative API

## Overview Manage users, accounts, and account groups in the ThousandEyes platform using the Administrative API.  This API provides the following endpoints that define the operations to manage your organization:     * `/account-groups`: Account groups are used to divide an organization into different sections. These endpoints can be used to create, retrieve, update and delete account groups.   * `/users`: Create, retrieve, update and delete users within an organization.    * `/roles`: Create, retrieve and update roles for the current user.    * `/permissions`: Retrieve all assignable permissions. Used in the context of modifying roles.    * `/audit-user-events`: Retrieve all activity log events.

API version: 7.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package thousandeyes

import (
	"encoding/json"
)

// checks if the AccountGroupRolesRequestBodyInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountGroupRolesRequestBodyInner{}

// AccountGroupRolesRequestBodyInner struct for AccountGroupRolesRequestBodyInner
type AccountGroupRolesRequestBodyInner struct {
	// Unique ID of the account group.
	AccountGroupId *string `json:"accountGroupId,omitempty"`
	// Unique role IDs.
	RoleIds []string `json:"roleIds,omitempty"`
}

// NewAccountGroupRolesRequestBodyInner instantiates a new AccountGroupRolesRequestBodyInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountGroupRolesRequestBodyInner() *AccountGroupRolesRequestBodyInner {
	this := AccountGroupRolesRequestBodyInner{}
	return &this
}

// NewAccountGroupRolesRequestBodyInnerWithDefaults instantiates a new AccountGroupRolesRequestBodyInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountGroupRolesRequestBodyInnerWithDefaults() *AccountGroupRolesRequestBodyInner {
	this := AccountGroupRolesRequestBodyInner{}
	return &this
}

// GetAccountGroupId returns the AccountGroupId field value if set, zero value otherwise.
func (o *AccountGroupRolesRequestBodyInner) GetAccountGroupId() string {
	if o == nil || IsNil(o.AccountGroupId) {
		var ret string
		return ret
	}
	return *o.AccountGroupId
}

// GetAccountGroupIdOk returns a tuple with the AccountGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupRolesRequestBodyInner) GetAccountGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountGroupId) {
		return nil, false
	}
	return o.AccountGroupId, true
}

// HasAccountGroupId returns a boolean if a field has been set.
func (o *AccountGroupRolesRequestBodyInner) HasAccountGroupId() bool {
	if o != nil && !IsNil(o.AccountGroupId) {
		return true
	}

	return false
}

// SetAccountGroupId gets a reference to the given string and assigns it to the AccountGroupId field.
func (o *AccountGroupRolesRequestBodyInner) SetAccountGroupId(v string) {
	o.AccountGroupId = &v
}

// GetRoleIds returns the RoleIds field value if set, zero value otherwise.
func (o *AccountGroupRolesRequestBodyInner) GetRoleIds() []string {
	if o == nil || IsNil(o.RoleIds) {
		var ret []string
		return ret
	}
	return o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupRolesRequestBodyInner) GetRoleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RoleIds) {
		return nil, false
	}
	return o.RoleIds, true
}

// HasRoleIds returns a boolean if a field has been set.
func (o *AccountGroupRolesRequestBodyInner) HasRoleIds() bool {
	if o != nil && !IsNil(o.RoleIds) {
		return true
	}

	return false
}

// SetRoleIds gets a reference to the given []string and assigns it to the RoleIds field.
func (o *AccountGroupRolesRequestBodyInner) SetRoleIds(v []string) {
	o.RoleIds = v
}

func (o AccountGroupRolesRequestBodyInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountGroupRolesRequestBodyInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountGroupId) {
		toSerialize["accountGroupId"] = o.AccountGroupId
	}
	if !IsNil(o.RoleIds) {
		toSerialize["roleIds"] = o.RoleIds
	}
	return toSerialize, nil
}

type NullableAccountGroupRolesRequestBodyInner struct {
	value *AccountGroupRolesRequestBodyInner
	isSet bool
}

func (v NullableAccountGroupRolesRequestBodyInner) Get() *AccountGroupRolesRequestBodyInner {
	return v.value
}

func (v *NullableAccountGroupRolesRequestBodyInner) Set(val *AccountGroupRolesRequestBodyInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountGroupRolesRequestBodyInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountGroupRolesRequestBodyInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountGroupRolesRequestBodyInner(val *AccountGroupRolesRequestBodyInner) *NullableAccountGroupRolesRequestBodyInner {
	return &NullableAccountGroupRolesRequestBodyInner{value: val, isSet: true}
}

func (v NullableAccountGroupRolesRequestBodyInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountGroupRolesRequestBodyInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


