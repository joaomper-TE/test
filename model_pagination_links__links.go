/*
Administrative API

## Overview Manage users, accounts, and account groups in the ThousandEyes platform using the Administrative API.  This API provides the following endpoints that define the operations to manage your organization:     * `/account-groups`: Account groups are used to divide an organization into different sections. These endpoints can be used to create, retrieve, update and delete account groups.   * `/users`: Create, retrieve, update and delete users within an organization.    * `/roles`: Create, retrieve and update roles for the current user.    * `/permissions`: Retrieve all assignable permissions. Used in the context of modifying roles.    * `/audit-user-events`: Retrieve all activity log events.

API version: 7.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package thousandeyes

import (
	"encoding/json"
)

// checks if the PaginationLinksLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginationLinksLinks{}

// PaginationLinksLinks struct for PaginationLinksLinks
type PaginationLinksLinks struct {
	Previous *Link `json:"previous,omitempty"`
	Next *Link `json:"next,omitempty"`
}

// NewPaginationLinksLinks instantiates a new PaginationLinksLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationLinksLinks() *PaginationLinksLinks {
	this := PaginationLinksLinks{}
	return &this
}

// NewPaginationLinksLinksWithDefaults instantiates a new PaginationLinksLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationLinksLinksWithDefaults() *PaginationLinksLinks {
	this := PaginationLinksLinks{}
	return &this
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *PaginationLinksLinks) GetPrevious() Link {
	if o == nil || IsNil(o.Previous) {
		var ret Link
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationLinksLinks) GetPreviousOk() (*Link, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *PaginationLinksLinks) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given Link and assigns it to the Previous field.
func (o *PaginationLinksLinks) SetPrevious(v Link) {
	o.Previous = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PaginationLinksLinks) GetNext() Link {
	if o == nil || IsNil(o.Next) {
		var ret Link
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationLinksLinks) GetNextOk() (*Link, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PaginationLinksLinks) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given Link and assigns it to the Next field.
func (o *PaginationLinksLinks) SetNext(v Link) {
	o.Next = &v
}

func (o PaginationLinksLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginationLinksLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

type NullablePaginationLinksLinks struct {
	value *PaginationLinksLinks
	isSet bool
}

func (v NullablePaginationLinksLinks) Get() *PaginationLinksLinks {
	return v.value
}

func (v *NullablePaginationLinksLinks) Set(val *PaginationLinksLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationLinksLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationLinksLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationLinksLinks(val *PaginationLinksLinks) *NullablePaginationLinksLinks {
	return &NullablePaginationLinksLinks{value: val, isSet: true}
}

func (v NullablePaginationLinksLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationLinksLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


